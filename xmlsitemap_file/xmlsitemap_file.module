<?php
// $Id$

/**
 * @file
 * Adds node file attachments to the site map.
 */

/**
 * @addtogroup xmlsitemap
 * @{
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_form_alter().
 */
function xmlsitemap_file_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'system_file_system_settings') {
    $form['#submit'][] = 'xmlsitemap_update_sitemap';
  }
}

/**
 * Implementation of hook_xmlsitemap_links().
 */
function xmlsitemap_file_xmlsitemap_links() {
  $result = db_query("SELECT xsm.id, xsm.priority, f.fid, f.filename, f.timestamp, u.list, u.weight
    FROM {xmlsitemap} xsm
    INNER JOIN {upload} u ON u.vid = xsm.sid
    INNER JOIN {files} f ON f.fid = u.fid
    WHERE xsm.type = 'node'"
  );
  $weight = db_fetch_object(db_query('SELECT MAX(weight) AS max, MIN(weight) AS min FROM {upload}'));
  $row = new stdClass();
  $row->module = 'xmlsitemap_file';
  $row->type = 'attachment';
  while ($file = db_fetch_object($result)) {
    $access = array();
    if (variable_get('file_downloads', FILE_DOWNLOADS_PUBLIC) == FILE_DOWNLOADS_PRIVATE) {
      $access = module_invoke_all('file_download', $file->filepath);
    }
    if (!in_array(-1, $access)) {
      $row->id = $file->id;
      $row->sid = $file->fid;
      $row->changed = $file->timestamp;
      $row->changefreq = time() - $file->timestamp;
      if ($file->priority == -1.0) {
        $row->priority = -1.0;
      }
      else {
        switch (variable_get('xmlsitemap_file_priority', -2.0)) {
          case -2.0:
            $row->priority = $file->priority;
            break;
          case -1.0:
            break;
          default:
            break;
        }
      }
      if (db_result(db_query("SELECT loc FROM {xmlsitemap} WHERE loc = '%s'", $row->loc)) != $row->loc) {
        drupal_write_record('xmlsitemap', $row);
      }
    }
  }
}

/*****************************************************************************
 * Public functions.
 ****************************************************************************/

/**
 * Return the absolute URL of the link added.
 */
function xmlsitemap_file_url($loc, $type) {
  return file_create_url($loc);
}

/**
 * @} End of "addtogroup xmlsitemap".
 */
