<?php
// $Id$

/**
 * @file
 * Install and uninstall schema and functions for the xmlsitemap_taxonomy module.
 */

/**
 * Implementation of hook_schema_alter().
 */
function xmlsitemap_taxonomy_schema_alter(&$schema) {
  $schema['xmlsitemap']['fields']['term_vid'] = array(
    'description' => 'The {term_data}.vid of this taxonomy term link.',
    'type' => 'int',
    'unsigned' => TRUE,
    'default' => NULL,
  );
  $schema['xmlsitemap']['indexes']['term_vid'] = array('term_vid');
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_taxonomy_install() {
  $ret = array();
  $field = array(
    'description' => 'The {term_data}.vid of this taxonomy term link.',
    'type' => 'int',
    'unsigned' => TRUE,
    'default' => NULL,
  );
  db_add_field($ret, 'xmlsitemap', 'term_vid', $field);
  db_add_index($ret, 'xmlsitemap', 'term_vid', array('term_vid'));
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_taxonomy_uninstall() {
  $ret = array();
  db_drop_index($ret, 'xmlsitemap', 'term_vid');
  db_drop_field($ret, 'xmlsitemap', 'term_vid');

  // Remove variables.
  drupal_load('module', 'xmlsitemap_taxonomy');
  $variables = array_keys(xmlsitemap_taxonomy_variables());
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}

// @todo Remove these update functions before alpha.
function xmlsitemap_taxonomy_update_1() {
  $ret = array();
  $vids = array_keys(taxonomy_get_vocabularies());
  foreach ($vids as $vid) {
    if (variable_get('xmlsitemap_taxonomy_priority_' . $vid, 'default') === 'default') {
      variable_set('xmlsitemap_taxonomy_priority_' . $vid, 0.5);
    }
  }
  return $ret;
}
