<?php
// $Id$

/**
 * Implementation of hook_schema().
 */
function xmlsitemap_schema() {
  $schema['xmlsitemap_additional'] = array(
    'description' => t('The base table for xmlsitemap.'),
    'fields' => array(
      'path' => array(
        'description' => t('The path of this node.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'pid' => array(
        'description' => t('The id of the path.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'last_changed' => array(
        'description' => t('Keeps track of new changes.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'previously_changed' => array(
        'description' => t('Keeps track of old changes.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'priority' => array(
        'description' => t('Stores the index value.'),
        'type' => 'float',
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'pid' => array('pid'),
    ),
    'primary key' => array('path'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_install() {
  // Create my tables.
  db_query("DELETE FROM {url_alias} WHERE dst LIKE 'sitemap%.xml'");
  drupal_install_schema('xmlsitemap');
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_uninstall() {
  // Drop my tables.
  $settings = db_query("SELECT name FROM {variable} WHERE name LIKE 'xmlsitemap\_%'");
  while ($variable = db_fetch_object($settings)) {
    variable_del($variable->name);
  }
  drupal_uninstall_schema('xmlsitemap');
}
