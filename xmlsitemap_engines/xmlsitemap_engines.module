<?php
// $Id$

/**
 * @file
 * Define actions for Google, Yahoo!, Ask, and Windows Live.
 */

/**
 * @addtogroup xmlsitemap
 * @{
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_menu().
 */
function xmlsitemap_engines_menu() {
  $items = array();
  $access_content = array('access content');
  if ($verify = variable_get('xmlsitemap_engines_google_verify', '')) {
    $items[$verify] = array(
      'title' => 'Google verification page',
      'page callback' => 'xmlsitemap_engines_verify',
      'page arguments' => array('google'),
      'type' => MENU_CALLBACK,
      'access arguments' => $access_content,
    );
  }
  if (($verify = variable_get('xmlsitemap_engines_yahoo_verify', '')) != '') {
    $items[$verify] = array(
      'title' => 'Yahoo! verification page',
      'page callback' => 'xmlsitemap_engines_verify',
      'page arguments' => array('yahoo'),
      'type' => MENU_CALLBACK,
      'access arguments' => $access_content,
    );
  }
  if (($verify = variable_get('xmlsitemap_engines_live_verify', 'LiveSearchSiteAuth.xml')) != '') {
    $items[$verify] = array(
      'title' => 'Windows Live verification page',
      'page callback' => 'xmlsitemap_engines_verify',
      'page arguments' => array('live'),
      'type' => MENU_CALLBACK,
      'access arguments' => $access_content,
    );
  }
 
  return $items;
}

/**
 * Implementation of hook_xmlsitemap_engines().
 */
function xmlsitemap_engines_xmlsitemap_engines($op, $type = NULL) {
  switch ($op) {
    case 'form':
      // Google fields.
      $form['google'] = array(
        '#type' => 'fieldset',
        '#title' => t('Google'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      $form['google']['xmlsitemap_engines_google_submit'] = array(
        '#type' => 'checkbox',
        '#title' => t('Submit site map to Google.'),
        '#default_value' => variable_get('xmlsitemap_engines_google_submit', FALSE),
      );
      $form['google']['xmlsitemap_engines_google_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Submission URL'),
        '#default_value' => variable_get('xmlsitemap_engines_google_url', 'http://www.google.com/webmasters/tools/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)),
        '#description' => t('The URL to submit the site map to.'),
      );
      $form['google']['xmlsitemap_engines_google_verify'] = array(
        '#type' => 'textfield',
        '#title' => t('Verification link'),
        '#default_value' => variable_get('xmlsitemap_engines_google_verify', ''),
        '#description' => t('In order to show statistics, Google will ask you to verify that you control this site by creating a file with a certain name. Enter that name here and the XML Sitemap module will create a path to that file name. This will only work if you have clean URLs enabled.'),
      );
      // Yahoo! fields.
      $form['yahoo'] = array(
        '#type' => 'fieldset',
        '#title' => t('Yahoo!'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      $form['yahoo']['xmlsitemap_engines_yahoo_submit'] = array(
        '#type' => 'checkbox',
        '#title' => t('Submit site map to Yahoo!'),
        '#default_value' => variable_get('xmlsitemap_engines_yahoo_submit', FALSE),
      );
      $form['yahoo']['xmlsitemap_engines_yahoo_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Submission URL'),
        '#default_value' => variable_get('xmlsitemap_engines_yahoo_url', 'http://search.yahooapis.com/SiteExplorerService/V1/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)),
        '#description' => t('The URL to submit the site map to.'),
      );
      $form['yahoo']['xmlsitemap_engines_yahoo_verify'] = array(
        '#type' => 'textfield',
        '#title' => t('Verification link'),
        '#default_value' => variable_get('xmlsitemap_engines_yahoo_verify', ''),
        '#description' => t('Before allowing you to view additional information, Yahoo! will ask you to verify that you control this site by creating a file with a certain name. Enter that name here, and XML Sitemap will create a path to that file name. This will only work if you have clean URLs enabled.'),
      );
      $form['yahoo']['xmlsitemap_engines_yahoo_verify_string'] = array(
        '#type' => 'textfield',
        '#title' => t('Authentication key'),
        '#default_value' => variable_get('xmlsitemap_engines_yahoo_verify_string', ''),
        '#description' => t('Yahoo! will ask you to put an authentication key in the verification file.'),
      );
      // Ask.com fields.
      $form['ask'] = array(
        '#type' => 'fieldset',
        '#title' => t('Ask.com'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      $form['ask']['xmlsitemap_engines_ask_submit'] = array(
        '#type' => 'checkbox',
        '#title' => t('Submit site map to Ask.com.'),
        '#default_value' => variable_get('xmlsitemap_engines_ask_submit', FALSE),
      );
      $form['ask']['xmlsitemap_engines_ask_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Submission URL'),
        '#default_value' => variable_get('xmlsitemap_engines_ask_url', 'http://submissions.ask.com/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)),
        '#description' => t('The URL to submit the site map to.'),
      );
      // Windows Live fields.
      $form['live'] = array(
        '#type' => 'fieldset',
        '#title' => t('Windows Live'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      $form['live']['xmlsitemap_engines_live_submit'] = array(
        '#type' => 'checkbox',
        '#title' => t('Submit site map to Windows Live.'),
        '#default_value' => variable_get('xmlsitemap_engines_live_submit', FALSE),
      );
      $form['live']['xmlsitemap_engines_live_url'] = array(
        '#type' => 'textfield',
        '#title' => t('Submission URL'),
        '#default_value' => variable_get('xmlsitemap_engines_live_url', 'http://webmaster.live.com/ping.aspx?siteMap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)),
        '#description' => t('The URL to submit the site map to.'),
      );
      $form['live']['xmlsitemap_engines_live_verify'] = array(
        '#type' => 'textfield',
        '#title' => t('Authentication file'),
        '#default_value' => variable_get('xmlsitemap_engines_live_verify', 'LiveSearchSiteAuth.xml'),
        '#description' => t('Before allowing you to view additional information, Windows Live will ask you to verify that you control this site by creating a file with a certain name. Enter that name here, and XML Sitemap will create a path to that file name. This will only work if you have clean URLs enabled.'),
      );
      $form['live']['xmlsitemap_engines_live_verify_string'] = array(
        '#type' => 'textfield',
        '#title' => t('Authentication tag'),
        '#default_value' => variable_get('xmlsitemap_engines_live_verify_string', ''),
        '#description' => t('Windows Live will give you an authentication tag.'),
      );
      return $form;
    case 'ping':
      // Submit the site map to Google.
      if (variable_get('xmlsitemap_engines_google_submit', FALSE)) {
        $result = drupal_http_request(variable_get('xmlsitemap_engines_google_url', 'http://www.google.com/webmasters/tools/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)));
        if ($result->code == 200) {
          watchdog('xmlsitemap', 'Sitemap successfully submitted to Google.');
        }
        else {
          watchdog('xmlsitemap', 'Error occurred submitting sitemap to Google: @code', array('@code' => $result->code), WATCHDOG_ERROR);
        }
      }
      // Submit the site map to Yahoo!.
      if (variable_get('xmlsitemap_engines_yahoo_submit', FALSE)) {
        $result = drupal_http_request(variable_get('xmlsitemap_engines_yahoo_url', 'http://search.yahooapis.com/SiteExplorerService/V1/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)));
        if ($result->code == 200) {
          watchdog('xmlsitemap', 'Site map successfully submitted to Yahoo!.');
        }
        else {
          watchdog('xmlsitemap', 'Error occurred submitting site map to Yahoo!: @code', array('@code' => $result->code), WATCHDOG_ERROR);
        }
      }
      // Submit the site map to Ask.com.
      if (variable_get('xmlsitemap_engines_ask_submit', FALSE)) {
        $result = drupal_http_request(variable_get('xmlsitemap_engines_ask_url', 'http://submissions.ask.com/ping?sitemap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)));
        if ($result->code == 200) {
          watchdog('xmlsitemap', 'Site map successfully submitted to Ask.com.');
        }
        else {
          watchdog('xmlsitemap', 'Error occurred submitting site map to Ask.com: @code', array('@code' => $result->code), WATCHDOG_ERROR);
        }
      }
      // Submit the site map to Windows Live.
      if (variable_get('xmlsitemap_engines_live_submit', FALSE)) {
        $result = drupal_http_request(variable_get('xmlsitemap_engines_live_url', 'http://webmaster.live.com/ping.aspx?siteMap='. xmlsitemap_url('sitemap.xml', drupal_lookup_path('alias', 'sitemap.xml') ? drupal_lookup_path('alias', 'sitemap.xml') : NULL, NULL, NULL, TRUE)));
        if ($result->code == 200) {
          watchdog('xmlsitemap', 'Site map successfully submitted to Windows Live.');
        }
        else {
          watchdog('xmlsitemap', 'Error occurred submitting site map to Windows Live: @code', array('@code' => $result->code), WATCHDOG_ERROR);
        }
      break;
    case 'access':
      if (strpos($_SERVER['HTTP_USER_AGENT'], 'Googlebot') !== FALSE) {
        return t('!sitemap downloaded by Google.', array('!sitemap' => $type));
      }
  }
}

/*****************************************************************************
 * Menu callbaks / Form builders.
 ****************************************************************************/

/**
 * Menu callback; display the verification page.
 */
function xmlsitemap_engines_verify($engine) {
  switch ($engine) {
    case 'google':
      print '<html>'."\n";
      print '  <head>'."\n";
      print '    <title>Hello, Google!</title>'."\n";
      print '  </head>'."\n";
      print '  <body>'."\n";
      print '    <p>Hello, Google!</p>'."\n";
      print '  </body>'."\n";
      print '</html>'."\n";
      break;
    case 'yahoo':
      print variable_get('xmlsitemap_engines_yahoo_verify_string', '');
      break;
    case 'live':
      print '<?xml version="1.0"?>'."\n";
      print "<users>\n";
      print '    <user>'. variable_get('xmlsitemap_engines_live_verify_string', '') ."</user>\n";
      print "</users>\n";
      break;
  }
  drupal_page_footer();
  exit;
}

/**
 * @} End of "addtogroup xmlsitemap".
 */
 