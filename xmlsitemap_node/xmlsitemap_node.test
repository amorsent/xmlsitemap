<?php
// $Id$

/**
 * @file
 * Unit tests for the xmlsitemap_node module.
 */

class XMLSitemapNodeTestHelper extends XMLSitemapTestHelper {
  protected $admin_user;
  protected $normal_user;
  protected $nodes = array();

  function setUp() {
    parent::setUp('xmlsitemap', 'xmlsitemap_node', 'comment');

    $this->admin_user = $this->drupalCreateUser(array('administer nodes'));
    //$this->normal_user = $this->drupalCreateUser(array('create page content', 'access content'));
  }

  //function addNodes($count) {
  //  for ($i = count($this->nodes); $i < ($count + 1); $i++) {
  //    $this->nodes[$i] = $this->drupalCreateNode();
  //  }
  //}

  function assertNodeInSitemap($node) {
    return $this->assertInSitemap(array('type' => 'node', 'id' => (is_object($node) ? $node->nid : $node)));
  }

  function assertNodeNotInSitemap($node) {
    return $this->assertNotInSitemap(array('type' => 'node', 'id' => (is_object($node) ? $node->nid : $node)));
  }
}

//class XMLSitemapNodeUnitTest extends DrupalWebTestCase {
//  public static function getInfo() {
//    return array(
//      'name' => 'XML Sitemap node unit tests',
//      'description' => 'Unit tests for the XML Sitemap node module.',
//      'group' => 'XML Sitemap',
//    );
//  }
//
//  function setUp() {
//    parent::setUp('xmlsitemap', 'xmlsitemap_node');
//  }
//}

class XMLSitemapNodeFunctionalTest extends XMLSitemapNodeTestHelper {
  public static function getInfo() {
    return array(
      'name' => 'XML Sitemap Node functional tests',
      'description' => 'Interface tests for the XML Sitemap Node module.',
      'group' => 'XML Sitemap',
    );
  }

  /**
   * Test that unpublishing a node removes it from the sitemap.
   */
  function testUnpublishedNode() {
    $this->drupalLogin($this->admin_user);

    // Create an unpublished node.
    $node = $this->drupalCreateNode(array('status' => FALSE));
    $this->assertNodeNotInSitemap($node);

    // Publish the node.
    $this->drupalPost('node/' . $node->nid . '/edit', array('status' => TRUE), t('Save'));
    $this->assertNodeInSitemap($node);

    // Unpublish the node again.
    $this->drupalPost('node/' . $node->nid . '/edit', array('status' => FALSE), t('Save'));
    $this->assertNodeNotInSitemap($node);
  }

  //function testMassOperations() {
  //  $this->drupalLogin($this->admin_user);
  //  $this->addNodes(2);
  //
  //  $edit = array(
  //    'operation' => 'xmlsitemap_exclude',
  //    'nodes[1]' => 1,
  //    'nodes[2]' => 2,
  //  );
  //  $this->drupalPost('admin/content/node', $edit, t('Update'));
  //
  //  for ($i = 0; $i < 2; $i++) {
  //    $this->assertNodeNotInSitemap($this->nodes[$i]->nid);
  //  }
  //
  //  $edit = array(
  //    'operation' => 'xmlsitemap_include',
  //    'nodes[1]' => 1,
  //    'nodes[2]' => 2,
  //  );
  //  $this->drupalPost('admin/content/node', $edit, t('Update'));
  //
  //  for ($i = 0; $i < 2; $i++) {
  //    $this->assertNodeInSitemap($this->nodes[$i]->nid);
  //  }
  //}
}
